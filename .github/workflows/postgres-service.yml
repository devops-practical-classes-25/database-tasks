name: Postgres Service Example

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  container-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres  # Используется последняя версия PostgreSQL
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        volumes:
          - ./init:/docker-entrypoint-initdb.d  # Скрипты выполняются автоматически

    steps:
      - uses: actions/checkout@v4
      - run: ls -la

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Установка Poetry и зависимостей
        run: |
          pip install poetry
          poetry install

      - name: Запуск тестов
        run: poetry run pytest tests/test_database.py
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5433
          DB_USER: demo
          DB_PASSWORD: demo
          DB_NAME: demo

  vm-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres  # Используется последняя версия PostgreSQL
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5433/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        volumes:
          - ./init:/docker-entrypoint-initdb.d  # Автоинициализация БД

    steps:
      - uses: actions/checkout@v4
      - run: ls -la

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Установка Poetry и зависимостей
        run: |
          pip install poetry
          poetry install

      - name: Применение миграций с Alembic
        run: |
          poetry run alembic upgrade head
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          DB_USER: demo
          DB_PASSWORD: demo
          DB_NAME: demo
          DATABASE_URL: postgresql://demo:demo@localhost:5433/demo

      - name: Запуск тестов
        run: poetry run pytest tests/test_database.py
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          DB_USER: demo
          DB_PASSWORD: demo
          DB_NAME: demo
